@using Lucky.Web.Framework.HtmlExtensions
@model Lucky.ViewModels.Models.SiteManager.DepartmentViewModel

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.DepartmentId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DepartmentId)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.DistributorId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.DropDownListFor(m => m.DistributorId, Model.DistributorListItems, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DistributorId)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.DropDownListTree("ParentId", Model.DepartmentListItems,"",true, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ParentId)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DepartmentName)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Sort, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sort)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    <div class="col-sm-4 col-sm-offset-2">
        <button type="submit" class="btn btn-primary" data-loading-text="保存中...">保存</button>
        <button type="button" class="btn btn-default" data-toggle="back">取消</button>
    </div>
</div>
