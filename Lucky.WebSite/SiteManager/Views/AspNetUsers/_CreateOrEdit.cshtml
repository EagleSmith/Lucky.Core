@model Lucky.ViewModels.Models.SiteManager.AspNetUsersViewModel

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.DistributorId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.DistributorId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DistributorId)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.DepartmentId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DepartmentId)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.IsSuper, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsSuper)
                @Html.ValidationMessageFor(model => model.IsSuper)
            </div>
        </div>
    </div>
</div>


<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.IsLock, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsLock)
                @Html.ValidationMessageFor(model => model.IsLock)
            </div>
        </div>
    </div>
</div>


<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.LoginCount, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.LoginCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LoginCount)
        </div>
    </div>
</div>


<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Token, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.Token, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Token)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.BehaviorRemind, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.BehaviorRemind, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BehaviorRemind)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.AddManagerId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.AddManagerId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddManagerId)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.AddFullName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.AddFullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddFullName)
        </div>
    </div>
</div>


<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>
    </div>
</div>



<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { datetoggle = "datepicker", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LockoutEndDateUtc)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.LockoutEnabled, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LockoutEnabled)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccessFailedCount)
        </div>
    </div>
</div>


<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    <div class="col-sm-4 col-sm-offset-2">
        <button type="submit" class="btn btn-primary" data-loading-text="保存中...">保存</button>
        <button type="button" class="btn btn-default" data-toggle="back">取消</button>
    </div>
</div>