@using Lucky.Hr.Web.Framework.HtmlExtensions
@model Lucky.Hr.ViewModels.Models.News.CategoryViewModel
<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.CategoryID)
        </div>
    </div>
</div>
<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.DropDownListTreeFor(model => model.ParentID, Model.ParentItems, "", true, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ParentID)
        </div>
    </div>
</div>
<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.HyperLink, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.HyperLink, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HyperLink)
        </div>
    </div>
</div>



<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayOrder)
        </div>
    </div>
</div>

<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        <div class="input-group">
            @Html.DatePickerFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreateDate)
        </div>
    </div>
</div>
<div class="line line-dashed line-lg pull-in"></div>
<div class="form-group">
    <div class="col-sm-4 col-sm-offset-2">
        <button type="submit" class="btn btn-primary" data-loading-text="保存中...">保存</button>
        <button type="button" class="btn btn-default" data-toggle="back">取消</button>
    </div>
</div>